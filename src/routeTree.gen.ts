/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SignUpIndexRouteImport } from './routes/sign-up/index'
import { Route as SignInIndexRouteImport } from './routes/sign-in/index'
import { Route as RequestsIndexRouteImport } from './routes/requests/index'
import { Route as MarketplaceIndexRouteImport } from './routes/marketplace/index'
import { Route as MaintenanceIndexRouteImport } from './routes/maintenance/index'
import { Route as LoansIndexRouteImport } from './routes/loans/index'
import { Route as HomeIndexRouteImport } from './routes/home/index'
import { Route as AssetsMyAssetsIndexRouteImport } from './routes/assets/my-assets/index'
import { Route as AssetsMyAssetsIdRouteImport } from './routes/assets/my-assets/$id'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SignUpIndexRoute = SignUpIndexRouteImport.update({
  id: '/sign-up/',
  path: '/sign-up/',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInIndexRoute = SignInIndexRouteImport.update({
  id: '/sign-in/',
  path: '/sign-in/',
  getParentRoute: () => rootRouteImport,
} as any)
const RequestsIndexRoute = RequestsIndexRouteImport.update({
  id: '/requests/',
  path: '/requests/',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketplaceIndexRoute = MarketplaceIndexRouteImport.update({
  id: '/marketplace/',
  path: '/marketplace/',
  getParentRoute: () => rootRouteImport,
} as any)
const MaintenanceIndexRoute = MaintenanceIndexRouteImport.update({
  id: '/maintenance/',
  path: '/maintenance/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoansIndexRoute = LoansIndexRouteImport.update({
  id: '/loans/',
  path: '/loans/',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeIndexRoute = HomeIndexRouteImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => rootRouteImport,
} as any)
const AssetsMyAssetsIndexRoute = AssetsMyAssetsIndexRouteImport.update({
  id: '/assets/my-assets/',
  path: '/assets/my-assets/',
  getParentRoute: () => rootRouteImport,
} as any)
const AssetsMyAssetsIdRoute = AssetsMyAssetsIdRouteImport.update({
  id: '/assets/my-assets/$id',
  path: '/assets/my-assets/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/home': typeof HomeIndexRoute
  '/loans': typeof LoansIndexRoute
  '/maintenance': typeof MaintenanceIndexRoute
  '/marketplace': typeof MarketplaceIndexRoute
  '/requests': typeof RequestsIndexRoute
  '/sign-in': typeof SignInIndexRoute
  '/sign-up': typeof SignUpIndexRoute
  '/assets/my-assets/$id': typeof AssetsMyAssetsIdRoute
  '/assets/my-assets': typeof AssetsMyAssetsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/home': typeof HomeIndexRoute
  '/loans': typeof LoansIndexRoute
  '/maintenance': typeof MaintenanceIndexRoute
  '/marketplace': typeof MarketplaceIndexRoute
  '/requests': typeof RequestsIndexRoute
  '/sign-in': typeof SignInIndexRoute
  '/sign-up': typeof SignUpIndexRoute
  '/assets/my-assets/$id': typeof AssetsMyAssetsIdRoute
  '/assets/my-assets': typeof AssetsMyAssetsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/home/': typeof HomeIndexRoute
  '/loans/': typeof LoansIndexRoute
  '/maintenance/': typeof MaintenanceIndexRoute
  '/marketplace/': typeof MarketplaceIndexRoute
  '/requests/': typeof RequestsIndexRoute
  '/sign-in/': typeof SignInIndexRoute
  '/sign-up/': typeof SignUpIndexRoute
  '/assets/my-assets/$id': typeof AssetsMyAssetsIdRoute
  '/assets/my-assets/': typeof AssetsMyAssetsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/home'
    | '/loans'
    | '/maintenance'
    | '/marketplace'
    | '/requests'
    | '/sign-in'
    | '/sign-up'
    | '/assets/my-assets/$id'
    | '/assets/my-assets'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/home'
    | '/loans'
    | '/maintenance'
    | '/marketplace'
    | '/requests'
    | '/sign-in'
    | '/sign-up'
    | '/assets/my-assets/$id'
    | '/assets/my-assets'
  id:
    | '__root__'
    | '/'
    | '/home/'
    | '/loans/'
    | '/maintenance/'
    | '/marketplace/'
    | '/requests/'
    | '/sign-in/'
    | '/sign-up/'
    | '/assets/my-assets/$id'
    | '/assets/my-assets/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  HomeIndexRoute: typeof HomeIndexRoute
  LoansIndexRoute: typeof LoansIndexRoute
  MaintenanceIndexRoute: typeof MaintenanceIndexRoute
  MarketplaceIndexRoute: typeof MarketplaceIndexRoute
  RequestsIndexRoute: typeof RequestsIndexRoute
  SignInIndexRoute: typeof SignInIndexRoute
  SignUpIndexRoute: typeof SignUpIndexRoute
  AssetsMyAssetsIdRoute: typeof AssetsMyAssetsIdRoute
  AssetsMyAssetsIndexRoute: typeof AssetsMyAssetsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-up/': {
      id: '/sign-up/'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in/': {
      id: '/sign-in/'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/requests/': {
      id: '/requests/'
      path: '/requests'
      fullPath: '/requests'
      preLoaderRoute: typeof RequestsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/marketplace/': {
      id: '/marketplace/'
      path: '/marketplace'
      fullPath: '/marketplace'
      preLoaderRoute: typeof MarketplaceIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/maintenance/': {
      id: '/maintenance/'
      path: '/maintenance'
      fullPath: '/maintenance'
      preLoaderRoute: typeof MaintenanceIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/loans/': {
      id: '/loans/'
      path: '/loans'
      fullPath: '/loans'
      preLoaderRoute: typeof LoansIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/home/': {
      id: '/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/assets/my-assets/': {
      id: '/assets/my-assets/'
      path: '/assets/my-assets'
      fullPath: '/assets/my-assets'
      preLoaderRoute: typeof AssetsMyAssetsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/assets/my-assets/$id': {
      id: '/assets/my-assets/$id'
      path: '/assets/my-assets/$id'
      fullPath: '/assets/my-assets/$id'
      preLoaderRoute: typeof AssetsMyAssetsIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  HomeIndexRoute: HomeIndexRoute,
  LoansIndexRoute: LoansIndexRoute,
  MaintenanceIndexRoute: MaintenanceIndexRoute,
  MarketplaceIndexRoute: MarketplaceIndexRoute,
  RequestsIndexRoute: RequestsIndexRoute,
  SignInIndexRoute: SignInIndexRoute,
  SignUpIndexRoute: SignUpIndexRoute,
  AssetsMyAssetsIdRoute: AssetsMyAssetsIdRoute,
  AssetsMyAssetsIndexRoute: AssetsMyAssetsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
