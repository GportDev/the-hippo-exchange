/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DemosTanstackQueryRouteImport } from './routes/demos/tanstack-query'
import { Route as DemosClerkRouteImport } from './routes/demos/clerk'
import { Route as MyAssetsPageRootRouteImport } from './routes/MyAssetsPage/_root'

const MyAssetsPageRouteImport = createFileRoute('/MyAssetsPage')()

const MyAssetsPageRoute = MyAssetsPageRouteImport.update({
  id: '/MyAssetsPage',
  path: '/MyAssetsPage',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemosTanstackQueryRoute = DemosTanstackQueryRouteImport.update({
  id: '/demos/tanstack-query',
  path: '/demos/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const DemosClerkRoute = DemosClerkRouteImport.update({
  id: '/demos/clerk',
  path: '/demos/clerk',
  getParentRoute: () => rootRouteImport,
} as any)
const MyAssetsPageRootRoute = MyAssetsPageRootRouteImport.update({
  id: '/_root',
  getParentRoute: () => MyAssetsPageRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/MyAssetsPage': typeof MyAssetsPageRootRoute
  '/demos/clerk': typeof DemosClerkRoute
  '/demos/tanstack-query': typeof DemosTanstackQueryRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/MyAssetsPage': typeof MyAssetsPageRootRoute
  '/demos/clerk': typeof DemosClerkRoute
  '/demos/tanstack-query': typeof DemosTanstackQueryRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/MyAssetsPage': typeof MyAssetsPageRouteWithChildren
  '/MyAssetsPage/_root': typeof MyAssetsPageRootRoute
  '/demos/clerk': typeof DemosClerkRoute
  '/demos/tanstack-query': typeof DemosTanstackQueryRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/MyAssetsPage' | '/demos/clerk' | '/demos/tanstack-query'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/MyAssetsPage' | '/demos/clerk' | '/demos/tanstack-query'
  id:
    | '__root__'
    | '/'
    | '/MyAssetsPage'
    | '/MyAssetsPage/_root'
    | '/demos/clerk'
    | '/demos/tanstack-query'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MyAssetsPageRoute: typeof MyAssetsPageRouteWithChildren
  DemosClerkRoute: typeof DemosClerkRoute
  DemosTanstackQueryRoute: typeof DemosTanstackQueryRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/MyAssetsPage': {
      id: '/MyAssetsPage'
      path: '/MyAssetsPage'
      fullPath: '/MyAssetsPage'
      preLoaderRoute: typeof MyAssetsPageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demos/tanstack-query': {
      id: '/demos/tanstack-query'
      path: '/demos/tanstack-query'
      fullPath: '/demos/tanstack-query'
      preLoaderRoute: typeof DemosTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demos/clerk': {
      id: '/demos/clerk'
      path: '/demos/clerk'
      fullPath: '/demos/clerk'
      preLoaderRoute: typeof DemosClerkRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/MyAssetsPage/_root': {
      id: '/MyAssetsPage/_root'
      path: '/MyAssetsPage'
      fullPath: '/MyAssetsPage'
      preLoaderRoute: typeof MyAssetsPageRootRouteImport
      parentRoute: typeof MyAssetsPageRoute
    }
  }
}

interface MyAssetsPageRouteChildren {
  MyAssetsPageRootRoute: typeof MyAssetsPageRootRoute
}

const MyAssetsPageRouteChildren: MyAssetsPageRouteChildren = {
  MyAssetsPageRootRoute: MyAssetsPageRootRoute,
}

const MyAssetsPageRouteWithChildren = MyAssetsPageRoute._addFileChildren(
  MyAssetsPageRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MyAssetsPageRoute: MyAssetsPageRouteWithChildren,
  DemosClerkRoute: DemosClerkRoute,
  DemosTanstackQueryRoute: DemosTanstackQueryRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
